current_telomere_change <- runif(1, -20000, 20000)
new_P_to_Q_ratio <- runif(1, 0.1, 10)
}
if (i == 100) {
dividing <- FALSE
}
i <- i + 1
}
dividing <- TRUE
while(dividing) {
barplot(as.numeric(ALT_telomere_lengths), las=2, main="ALT+ Telomere Lengths for Chromosomes", ylim=c(0,50000))
abline(h=5000, col="red", lwd=3)
abline(h=3000, col="black", lwd=3)
ALT_telomere_lengths <- as.numeric(ALT_telomere_lengths) - 175
if (min(ALT_telomere_lengths) < 3000){
dividing <- FALSE
}
}
i <- 1
for(length(ALT_telomere_lengths)){
i <- 1
for(length in ALT_telomere_lengths){
print(i)
i <- i + 1
}
ALT_telomere_lengths
# THIS WILL BE ATTEMPT 3
# Here are some of the inspiration papers for the model:
# Bryan 1995. ALT up to 50 kb (peaks at 10 - 50 kb)
# Henson 2002 less than 3kb to over 50 kb
# Murnane 1994 ALT cells sporadic +/- in telomere lengths up to 20 kb AND gradual erosion of 50 bp/ PD
# Yeager 1999 ALT pattern took 17 generations to escape culture w/clone
# LOTS OF CITATIONS FOR THIS up to 30% of ALT telomeres have undetectable telomeres MIGHT BE UNDETECTABLY SHORT CAUSE DIFF SEQUENCES
# 28 is J.N. Jeyapalan, A. Mendez-Bermudez, N. Zaffaroni, Y.E. Dubrova, N.J. Royle
# PERREM 2001 p/q arm ratios are off in ALT (p / q is 10 - 0.1)
# Fasching 2005 AG11395 q/p ratio 0.4 to 8.99 (22.5 fold) for Tel-PNA. 0.25 to 18.7 (74.8 fold) for SV40 probe3. <2 fold for telomerase
# Henson 2010 Assaying and investigating Alternative Lengthening of Telomeres activity in human cells and cancers
# ALT makes the ratio of p/q weird. Expected to be unchanged if ALT turned off.
# Henson 2010 Assaying and investigating Alternative Lengthening of Telomeres activity in human cells and cancer
# Losses of chromosomes 13, X, and 22, gains of 2, 3, 5, and 20, and translocation/deletion events involving several common chromosomal fragile sites (CFSs) were recurrent.
# it creates a list of 92 telomeres that randomly range from 500 bp to 50,000 bp in size.
# the p / q ratio is randomly chosen between 10 - 0.1
# p + q arm = total telomere length for the chromosome of interest
# it creates 92 telomeres
ALT_telomere_lengths <- vector("list", 92)
# these are placeholders for values that will be used throughout the program
current_telomere_length_total <- 0
current_telomere_length_Q <- 0
current_telomere_length_P <- 0
list_of_PQ_ratios <- vector("list", 46)
text_of_PQ_numbers <- vector("list", 46)
# i keeps track of the current interation. Note that each run has two iterations of adding to the tel length list
i <- 1
j <- 1
generate_ALT_telomeres <- function() {
# runs for 46 items (cause 92 total and creating p and q w/ each loop)
for(length in 1:46){
# determine the total telomere length between 500 and 50,000 bp
#current_telomere_length <- runif(1, min=500, max=50000)
#current_telomere_length <- rnorm(1, 15000, 2000)
# current_telomere_length <- rnorm(1, 20000, 1250) + runif(1, min=500, max=20000)
current_telomere_length <- runif(1, min=10000, max=50000)
# determine the p/q ratio between 0.1 and 10
P_to_Q_ratio <- runif(1, -10, 10)
if(P_to_Q_ratio == 1) {
current_telomere_length_P <- current_telomere_length * 0.5
current_telomere_length_Q <- current_telomere_length * 0.5
} else if(P_to_Q_ratio > 1) {
# P_to_Q_ratio <- runif(1, 0.1, 10)
current_telomere_length_Q <- current_telomere_length/(runif(1, 0.1, 10)+1)
current_telomere_length_P <- current_telomere_length - current_telomere_length_Q
} else if(P_to_Q_ratio < 1) {
current_telomere_length_P <- current_telomere_length/(runif(1, 0.1, 10)+1)
current_telomere_length_Q <- current_telomere_length - current_telomere_length_P
}
# current_telomere_length_P <- current_telomere_length - current_telomere_length_Q
# get the sum (this number is already known. I'm using it for error checking)
current_sum_p_q <- current_telomere_length_Q+current_telomere_length_P
# get the p/q ratio (this number is already known. I'm using it for error checking)
determine_P_to_Q_ratio <- current_telomere_length_P / current_telomere_length_Q
list_of_PQ_ratios[j] <- determine_P_to_Q_ratio
text_of_PQ_numbers[j] <- paste("P is ", current_telomere_length_P, " Q is ", current_telomere_length_Q)
# print out the math to check by hand
#print(paste("current total length is ", current_telomere_length, "Q is ", current_telomere_length_Q, "P is ", current_telomere_length_P, " sum is ", current_sum_p_q))
#print(paste("current P_to_Q_ratio is ", P_to_Q_ratio, "Q is ", current_telomere_length_Q, "P is ", current_telomere_length_P, " P_to_Q_ratio is ", determine_P_to_Q_ratio))
#print("")
# store current p and q arms
ALT_telomere_lengths[i] <- current_telomere_length_P
i <- i + 1
ALT_telomere_lengths[i] <- current_telomere_length_Q
i <- i + 1
j <- j + 1
}
#return(ALT_telomere_lengths)
#return(list_of_PQ_ratios)
newList <- list("lengths" = ALT_telomere_lengths, "ratios" = list_of_PQ_ratios, "text" = text_of_PQ_numbers)
return(newList)
}
newList <- generate_ALT_telomeres()
ALT_telomere_lengths <- newList$lengths
list_of_PQ_ratios <- newList$ratios
text_of_PQ_numbers <- newList$text
#ALT_telomere_lengths <- generate_ALT_telomeres()
#list_of_PQ_ratios <- generate_ALT_telomeres()
ALT_telomere_lengths
ALT_telomere_lengths
ALT_chromosome_lengths <- 0
for(i in length(1:46)) {
print(i)
}
#ALT_telomere_lengths
ALT_chromosome_lengths <- 0
for(i in length(1:46)) {
print(i)
}
#ALT_telomere_lengths
ALT_chromosome_lengths <- 0
i <- 1
while(i <= 46) {
print(i)
i <- i + 1
}
#ALT_telomere_lengths
ALT_chromosome_lengths <- 0
i <- 1
while(i <= 46) {
print(i)
ALT_chromosome_lengths[1]
i <- i + 1
}
#ALT_telomere_lengths
ALT_chromosome_lengths <- 0
i <- 1
while(i <= 46) {
print(i)
print(ALT_chromosome_lengths[1])
i <- i + 1
}
#ALT_telomere_lengths
ALT_chromosome_lengths <- 0
i <- 1
while(i <= 46) {
print(i)
print(ALT_telomere_lengths[i])
i <- i + 1
}
# THIS WILL BE ATTEMPT 3
# Here are some of the inspiration papers for the model:
# Bryan 1995. ALT up to 50 kb (peaks at 10 - 50 kb)
# Henson 2002 less than 3kb to over 50 kb
# Murnane 1994 ALT cells sporadic +/- in telomere lengths up to 20 kb AND gradual erosion of 50 bp/ PD
# Yeager 1999 ALT pattern took 17 generations to escape culture w/clone
# LOTS OF CITATIONS FOR THIS up to 30% of ALT telomeres have undetectable telomeres MIGHT BE UNDETECTABLY SHORT CAUSE DIFF SEQUENCES
# 28 is J.N. Jeyapalan, A. Mendez-Bermudez, N. Zaffaroni, Y.E. Dubrova, N.J. Royle
# PERREM 2001 p/q arm ratios are off in ALT (p / q is 10 - 0.1)
# Fasching 2005 AG11395 q/p ratio 0.4 to 8.99 (22.5 fold) for Tel-PNA. 0.25 to 18.7 (74.8 fold) for SV40 probe3. <2 fold for telomerase
# Henson 2010 Assaying and investigating Alternative Lengthening of Telomeres activity in human cells and cancers
# ALT makes the ratio of p/q weird. Expected to be unchanged if ALT turned off.
# Henson 2010 Assaying and investigating Alternative Lengthening of Telomeres activity in human cells and cancer
# Losses of chromosomes 13, X, and 22, gains of 2, 3, 5, and 20, and translocation/deletion events involving several common chromosomal fragile sites (CFSs) were recurrent.
# it creates a list of 92 telomeres that randomly range from 500 bp to 50,000 bp in size.
# the p / q ratio is randomly chosen between 10 - 0.1
# p + q arm = total telomere length for the chromosome of interest
# it creates 92 telomeres
ALT_telomere_lengths <- vector("list", 92)
# these are placeholders for values that will be used throughout the program
current_telomere_length_total <- 0
current_telomere_length_Q <- 0
current_telomere_length_P <- 0
list_of_PQ_ratios <- vector("list", 46)
text_of_PQ_numbers <- vector("list", 46)
# i keeps track of the current interation. Note that each run has two iterations of adding to the tel length list
i <- 1
j <- 1
generate_ALT_telomeres <- function() {
# runs for 46 items (cause 92 total and creating p and q w/ each loop)
for(length in 1:46){
# determine the total telomere length between 500 and 50,000 bp
#current_telomere_length <- runif(1, min=500, max=50000)
#current_telomere_length <- rnorm(1, 15000, 2000)
# current_telomere_length <- rnorm(1, 20000, 1250) + runif(1, min=500, max=20000)
current_telomere_length <- runif(1, min=10000, max=50000)
# determine the p/q ratio between 0.1 and 10
P_to_Q_ratio <- runif(1, -10, 10)
if(P_to_Q_ratio == 1) {
current_telomere_length_P <- current_telomere_length * 0.5
current_telomere_length_Q <- current_telomere_length * 0.5
} else if(P_to_Q_ratio > 1) {
# P_to_Q_ratio <- runif(1, 0.1, 10)
current_telomere_length_Q <- current_telomere_length/(runif(1, 0.1, 10)+1)
current_telomere_length_P <- current_telomere_length - current_telomere_length_Q
} else if(P_to_Q_ratio < 1) {
current_telomere_length_P <- current_telomere_length/(runif(1, 0.1, 10)+1)
current_telomere_length_Q <- current_telomere_length - current_telomere_length_P
}
# current_telomere_length_P <- current_telomere_length - current_telomere_length_Q
# get the sum (this number is already known. I'm using it for error checking)
current_sum_p_q <- current_telomere_length_Q+current_telomere_length_P
# get the p/q ratio (this number is already known. I'm using it for error checking)
determine_P_to_Q_ratio <- current_telomere_length_P / current_telomere_length_Q
list_of_PQ_ratios[j] <- determine_P_to_Q_ratio
text_of_PQ_numbers[j] <- paste("P is ", current_telomere_length_P, " Q is ", current_telomere_length_Q)
# print out the math to check by hand
#print(paste("current total length is ", current_telomere_length, "Q is ", current_telomere_length_Q, "P is ", current_telomere_length_P, " sum is ", current_sum_p_q))
#print(paste("current P_to_Q_ratio is ", P_to_Q_ratio, "Q is ", current_telomere_length_Q, "P is ", current_telomere_length_P, " P_to_Q_ratio is ", determine_P_to_Q_ratio))
#print("")
# store current p and q arms
ALT_telomere_lengths[i] <- current_telomere_length_P
i <- i + 1
ALT_telomere_lengths[i] <- current_telomere_length_Q
i <- i + 1
j <- j + 1
}
#return(ALT_telomere_lengths)
#return(list_of_PQ_ratios)
newList <- list("lengths" = ALT_telomere_lengths, "ratios" = list_of_PQ_ratios, "text" = text_of_PQ_numbers)
return(newList)
}
newList <- generate_ALT_telomeres()
ALT_telomere_lengths <- newList$lengths
list_of_PQ_ratios <- newList$ratios
text_of_PQ_numbers <- newList$text
#ALT_telomere_lengths <- generate_ALT_telomeres()
#list_of_PQ_ratios <- generate_ALT_telomeres()
play_ALT_telomere_lengths <- ALT_telomere_lengths
# ALT_chromosome_lengths <- 0
p <- 1
q <- 2
while(i <= 46) {
print(i)
print(play_ALT_telomere_lengths[p])
print(play_ALT_telomere_lengths[q])
p <- p + 2
q <- q + 2
}
ALT_telomere_lengths
play_ALT_telomere_lengths <- ALT_telomere_lengths
# ALT_chromosome_lengths <- 0
p <- 1
q <- 2
while(i <= 46) {
print(play_ALT_telomere_lengths[p])
print(play_ALT_telomere_lengths[q])
p <- p + 2
q <- q + 2
}
play_ALT_telomere_lengths <- as.numeric(ALT_telomere_lengths)
# ALT_chromosome_lengths <- 0
p <- 1
q <- 2
while(i <= 46) {
print(play_ALT_telomere_lengths[p])
print(play_ALT_telomere_lengths[q])
p <- p + 2
q <- q + 2
}
play_ALT_telomere_lengths <- as.numeric(ALT_telomere_lengths)
# ALT_chromosome_lengths <- 0
p <- 1
q <- 2
while(q <= 92) {
print(play_ALT_telomere_lengths[p])
print(play_ALT_telomere_lengths[q])
p <- p + 2
q <- q + 2
}
play_ALT_telomere_lengths <- as.numeric(ALT_telomere_lengths)
# ALT_chromosome_lengths <- 0
p <- 1
q <- 2
while(q <= 92) {
print(play_ALT_telomere_lengths[p])
print(play_ALT_telomere_lengths[q])
p <- p + 2
q <- q + 2
}
play_ALT_telomere_lengths <- as.numeric(ALT_telomere_lengths)
ALT_chromosome_lengths <- <- vector("list", 92)
play_ALT_telomere_lengths <- as.numeric(ALT_telomere_lengths)
ALT_chromosome_lengths <- vector("list", 92)
i <- 1
p <- 1
q <- 2
while(q <= 92) {
print(play_ALT_telomere_lengths[p])
print(play_ALT_telomere_lengths[q])
ALT_chromosome_lengths[i] <- play_ALT_telomere_lengths[p] + play_ALT_telomere_lengths[q]
p <- p + 2
q <- q + 2
i <- i + 1
}
play_ALT_telomere_lengths <- as.numeric(ALT_telomere_lengths)
ALT_chromosome_lengths <- vector("list", 92)
i <- 1
p <- 1
q <- 2
while(q <= 92) {
print(play_ALT_telomere_lengths[p])
print(play_ALT_telomere_lengths[q])
ALT_chromosome_lengths[i] <- play_ALT_telomere_lengths[p] + play_ALT_telomere_lengths[q]
p <- p + 2
q <- q + 2
i <- i + 1
}
barplot(ALT_chromosome_lengths)
barplot(as.numeric(ALT_chromosome_lengths))
ALT_chromosome_lengths
play_ALT_telomere_lengths <- (ALT_telomere_lengths)
ALT_chromosome_lengths <- vector("list", 92)
i <- 1
p <- 1
q <- 2
while(q <= 92) {
print(play_ALT_telomere_lengths[p])
print(play_ALT_telomere_lengths[q])
ALT_chromosome_lengths[i] <- play_ALT_telomere_lengths[p] + play_ALT_telomere_lengths[q]
p <- p + 2
q <- q + 2
i <- i + 1
}
play_ALT_telomere_lengths <- as.numeric(ALT_telomere_lengths)
ALT_chromosome_lengths <- vector("list", 92)
i <- 1
p <- 1
q <- 2
while(q <= 92) {
print(play_ALT_telomere_lengths[p])
print(play_ALT_telomere_lengths[q])
ALT_chromosome_lengths[i] <- play_ALT_telomere_lengths[p] + play_ALT_telomere_lengths[q]
p <- p + 2
q <- q + 2
i <- i + 1
}
barplot(as.numeric(ALT_chromosome_lengths))
play_ALT_telomere_lengths <- as.numeric(ALT_telomere_lengths)
ALT_chromosome_lengths <- vector("list", 92)
i <- 1
p <- 1
q <- 2
while(q <= 92) {
print(play_ALT_telomere_lengths[p])
print(play_ALT_telomere_lengths[q])
ALT_chromosome_lengths[i] <- play_ALT_telomere_lengths[p] + play_ALT_telomere_lengths[q]
p <- p + 2
q <- q + 2
i <- i + 1
}
barplot((ALT_chromosome_lengths))
ALT_chromosome_lengths
play_ALT_telomere_lengths
play_ALT_telomere_lengths <- as.numeric(ALT_telomere_lengths)
ALT_chromosome_lengths <- vector("list", 92)
i <- 1
p <- 1
q <- 2
while(q <= 92) {
print(play_ALT_telomere_lengths[p])
print(play_ALT_telomere_lengths[q])
ALT_chromosome_lengths[i] <- as.numeric(play_ALT_telomere_lengths[p]) + as.numeric(play_ALT_telomere_lengths[q])
p <- p + 2
q <- q + 2
i <- i + 1
}
barplot((ALT_chromosome_lengths))
ALT_chromosome_lengths
play_ALT_telomere_lengths <- as.numeric(ALT_telomere_lengths)
ALT_chromosome_lengths <- list()
i <- 1
p <- 1
q <- 2
while(q <= 92) {
print(play_ALT_telomere_lengths[p])
print(play_ALT_telomere_lengths[q])
ALT_chromosome_lengths[i] <- as.numeric(play_ALT_telomere_lengths[p]) + as.numeric(play_ALT_telomere_lengths[q])
p <- p + 2
q <- q + 2
i <- i + 1
}
barplot((ALT_chromosome_lengths))
play_ALT_telomere_lengths <- as.numeric(ALT_telomere_lengths)
ALT_chromosome_lengths <- vector()
i <- 1
p <- 1
q <- 2
while(q <= 92) {
print(play_ALT_telomere_lengths[p])
print(play_ALT_telomere_lengths[q])
ALT_chromosome_lengths[i] <- as.numeric(play_ALT_telomere_lengths[p]) + as.numeric(play_ALT_telomere_lengths[q])
p <- p + 2
q <- q + 2
i <- i + 1
}
barplot((ALT_chromosome_lengths))
play_ALT_telomere_lengths <- ALT_chromosome_lengths
dividing <- TRUE
while(dividing) {
barplot(as.numeric(play_ALT_telomere_lengths), las=2, main="ALT+ Telomere Lengths for Chromosomes", ylim=c(0,50000))
abline(h=5000, col="red", lwd=3)
abline(h=3000, col="black", lwd=3)
ALT_telomere_lengths <- as.numeric(play_ALT_telomere_lengths) - 175
for(i in length(1:46)) {
current_total <-
}
play_ALT_telomere_lengths <- ALT_chromosome_lengths
dividing <- TRUE
while(dividing) {
barplot(as.numeric(play_ALT_telomere_lengths), las=2, main="ALT+ Telomere Lengths for Chromosomes", ylim=c(0,50000))
abline(h=5000, col="red", lwd=3)
abline(h=3000, col="black", lwd=3)
ALT_telomere_lengths <- as.numeric(play_ALT_telomere_lengths) - 175
#for(i in length(1:46)) {
#  current_total <-
#}
if (min(play_ALT_telomere_lengths) < 3000){
dividing <- FALSE
}
}
play_ALT_telomere_lengths <- ALT_chromosome_lengths
dividing <- TRUE
while(dividing) {
barplot(as.numeric(play_ALT_telomere_lengths), las=2, main="ALT+ Telomere Lengths for Chromosomes", ylim=c(0,50000))
abline(h=5000, col="red", lwd=3)
abline(h=3000, col="black", lwd=3)
play_ALT_telomere_lengths <- as.numeric(play_ALT_telomere_lengths) - 175
#for(i in length(1:46)) {
#  current_total <-
#}
if (min(play_ALT_telomere_lengths) < 3000){
dividing <- FALSE
}
}
play_ALT_telomere_lengths <- ALT_chromosome_lengths
dividing <- TRUE
divisions <- 0
while(dividing) {
barplot(as.numeric(play_ALT_telomere_lengths), las=2, main="ALT+ Telomere Lengths for Chromosomes", ylim=c(0,50000))
abline(h=5000, col="red", lwd=3)
abline(h=3000, col="black", lwd=3)
play_ALT_telomere_lengths <- as.numeric(play_ALT_telomere_lengths) - 175
#for(i in length(1:46)) {
#  current_total <-
#}
if (min(play_ALT_telomere_lengths) < 3000){
dividing <- FALSE
}
divisions <- divisions + 1
}
divisions
setwd("/media/david/Linux/Telomerase_Disorders")
getwd()
list.files()
setwd("/media/david/Linux/Telomerase_Disorders")
getwd()
list.files()
setwd("/media/david/Linux/Telomerase_Disorders/Sequences")
getwd()
list.files()
read.fasta("hTERC_NCBI_RNA.fasta")
library(seqinr)
read.fasta("hTERC_NCBI_RNA.fasta")
library(seqinr)
hTERC <- read.fasta("hTERC_NCBI_RNA.fasta")
hTERC[[1]]
library(seqinr)
hTERC <- read.fasta("hTERC_NCBI_RNA.fasta")
hTERC_sequence <- hTERC[[1]]
length(hTERC_sequence)
# hTERT Protein
hTERT_AA <- read.fasta("hTERT_Protein_Uniprot_O14746")
# hTERT Protein
hTERT_AA <- read.fasta("hTERT_Protein_Uniprot_O14746.fasta")
# hTERT Protein
hTERT_AA <- read.fasta("hTERT_Protein_Uniprot_O14746.fasta")
# hTERT Protein
# hTERT_AA <- read.fasta("hTERT_Protein_Uniprot_O14746.fasta")
hTERT_AA <- readAAStringSet("hTERT_Protein_Uniprot_O14746.fasta")
# hTERT Protein
# hTERT_AA <- read.fasta("hTERT_Protein_Uniprot_O14746.fasta")
hTERT_AA <- readAAStringSet("hTERT_Protein_Uniprot_O14746.fasta")
hTERT_AA_sequences <- hTERT_AA[[1]]
# hTERT Protein
hTERT_AA <- read.fasta("hTERT_Protein_Uniprot_O14746.fasta")
# hTERT_AA <- readAAStringSet("hTERT_Protein_Uniprot_O14746.fasta")
hTERT_AA_sequences <- hTERT_AA[[1]]
# hTERT Protein
hTERT_AA <- read.fasta("hTERT_Protein_Uniprot_O14746.fasta")
# hTERT_AA <- readAAStringSet("hTERT_Protein_Uniprot_O14746.fasta")
hTERT_AA_sequences <- hTERT_AA[[1]]
hTERT_AA_sequences
# hTERT Protein
hTERT_AA <- read.fasta("hTERT_Protein_Uniprot_O14746.fasta")
# hTERT_AA <- readAAStringSet("hTERT_Protein_Uniprot_O14746.fasta")
hTERT_AA_sequences <- hTERT_AA[[1]]
length(hTERT_AA_sequences)
# hTERC RNA
library(seqinr)
hTERC_RNA <- read.fasta("hTERC_NCBI_RNA.fasta")
setwd("/media/david/Linux/Telomerase_Disorders/Sequences")
getwd()
list.files()
setwd("/media/david/Linux/Telomerase_Disorders/Sequences")
getwd()
list.files()
# hTERC RNA
library(seqinr)
hTERC_RNA <- read.fasta("hTERC_NCBI_RNA.fasta")
setwd("/media/david/Linux/Telomerase_Disorders/Sequences")
getwd()
list.files()
# hTERC RNA
library(seqinr)
hTERC_RNA <- read.fasta("hTERC_NCBI_RNA.fasta")
